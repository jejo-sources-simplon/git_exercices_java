package com.parapharma.analytics.Bugs;

import com.parapharma.analytics.ISymptomReader;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Simple brute force implementation
 *
 */
public class Bugs_ReadSymptomDataFromFile implements ISymptomReader {							    // bug_s1 : le modificateur d'accès est en trop. Toutes les classes sont
    //   déclarées sur le même niveau et seule la classe 'AnalyticsCounter', qui
    //   contient la méthode 'main', doit être déclarée 'public'.

    private String filepath;

    /**
     *
     * @param filepath a full or partial path to file with symptom strings in it, one per line
     */

    public ReadSymptomDataFromFile (String filepath) {
        this.filepath = filepath;
    }

    @Override
    public List<String> GetSymptoms() {
        ArrayList<String> result = new ArrayList<String>();

        if (filepath != null) {
            try {
                BufferedReader reader = new BufferedReader (new FileReader(filepath));
                String line = reader.readLine();

                while (line != null) {
                    result.add(line);
                    line = reader.readLine();
                }
                reader.close();
            } catch (IOException e) {
                e.printStackTrace();														        // bug_f1 : il serait utile d'indiquer à l'utilisateur que le fichier de symptômes
                //   'filepath' n'existe pas ou est n'est pas accessible.
            }
        }																					        // bug_f2 : il serait utile d'afficher un message d'information lorsque le
        //   fichier des symptômes 'filepath' n'a pas été définit.

        return result;
    }

}

